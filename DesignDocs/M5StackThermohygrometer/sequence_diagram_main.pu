@startuml main
title Main function

participant main
participant TaskManager
participant ThermohygroDataMeasurer
participant GUIManager
participant MeasureEnvDataListenerImpl
participant CommunicationClient

activate main
group setup()
    main -> ThermohygroDataMeasurer: constructor()
    activate ThermohygroDataMeasurer
    return
    main -> GUIManager: constructor()
    activate GUIManager
    return
    main -> GUIManager: GetMeasureEnvDataListener()
    activate GUIManager
    GUIManager -> MeasureEnvDataListenerImpl: constructor(GUIManager* gui_manager)
    activate MeasureEnvDataListenerImpl
    return
    return
    main -> ThermohygroDataMeasurer: SetMeasureEnvDataListener(MeasureEnvDataListener* listener)
    activate ThermohygroDataMeasurer
    return
    main -> CommunicationClient: constructor()
    activate CommunicationClient
    return
    main -> ThermohygroDataMeasurer: SetCommunicationClient(CommunicationClient* client)
    activate ThermohygroDataMeasurer
    return
    main -> TaskManager: constructor()
    activate TaskManager
    return
    main -> TaskManager: CreateTask(std::string method_name, void* context)
    activate TaskManager
    return
end

group loop()
    loop
        main -> GUIManager: CheckIfButtonsPressed()
        activate GUIManager
        return
        main -> main: delay(10)
    end
end
deactivate main


@enduml